[{"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\index.js":"1","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\App.js":"2","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\GlobalStyles.js":"3","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Route.js":"4","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Header.js":"5","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\index.js":"6","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\index.js":"7","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\index.js":"8","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\index.js":"9","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaContainer.js":"10","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomeContainer.js":"11","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelContainer.js":"12","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminContainer.js":"13","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminPresenter.js":"14","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\api.js":"15","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomePresenter.js":"16","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaPresenter.js":"17","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelPresenter.js":"18","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Article.js":"19","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Loader.js":"20","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Table1.js":"21","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\js\\common.js":"22","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Test\\index.js":"23","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Test\\TestContainer.js":"24","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Test\\TestPresenter.js":"25"},{"size":396,"mtime":1612585818760,"results":"26","hashOfConfig":"27"},{"size":1330,"mtime":1613033395487,"results":"28","hashOfConfig":"27"},{"size":596,"mtime":1613008394107,"results":"29","hashOfConfig":"27"},{"size":863,"mtime":1613201326953,"results":"30","hashOfConfig":"27"},{"size":2032,"mtime":1613201327572,"results":"31","hashOfConfig":"27"},{"size":78,"mtime":1612585818763,"results":"32","hashOfConfig":"27"},{"size":81,"mtime":1612789629331,"results":"33","hashOfConfig":"27"},{"size":80,"mtime":1612585818762,"results":"34","hashOfConfig":"27"},{"size":75,"mtime":1612585818764,"results":"35","hashOfConfig":"27"},{"size":5766,"mtime":1613220130051,"results":"36","hashOfConfig":"27"},{"size":2225,"mtime":1613200105896,"results":"37","hashOfConfig":"27"},{"size":5728,"mtime":1613220143899,"results":"38","hashOfConfig":"27"},{"size":193,"mtime":1612585818761,"results":"39","hashOfConfig":"27"},{"size":147,"mtime":1612585818761,"results":"40","hashOfConfig":"27"},{"size":1190,"mtime":1613144299199,"results":"41","hashOfConfig":"27"},{"size":3393,"mtime":1613201175945,"results":"42","hashOfConfig":"27"},{"size":2926,"mtime":1613099816103,"results":"43","hashOfConfig":"27"},{"size":2918,"mtime":1613201387512,"results":"44","hashOfConfig":"27"},{"size":3787,"mtime":1613219924483,"results":"45","hashOfConfig":"27"},{"size":383,"mtime":1612585818760,"results":"46","hashOfConfig":"27"},{"size":1054,"mtime":1613008394108,"results":"47","hashOfConfig":"27"},{"size":889,"mtime":1613220071779,"results":"48","hashOfConfig":"27"},{"size":78,"mtime":1613143369129,"results":"49","hashOfConfig":"27"},{"size":5936,"mtime":1613199686167,"results":"50","hashOfConfig":"27"},{"size":2923,"mtime":1613199673098,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"a892bn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\index.js",[],["114","115"],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\App.js",["116"],"import Route from './Route';\r\nimport GlobalStyles from './GlobalStyles';\r\nfunction App() {\r\n  // 함수 최초 설정\r\n  Date.prototype.getWeek = function() {\r\n    /*getWeek() was developed by Nick Baicoianu at MeanFreePath: http://www.epoch-calendar.com */\r\n\r\n    let dowOffset = 0; //default dowOffset to zero\r\n    let newYear = new Date(this.getFullYear(),0,1);\r\n    let day = newYear.getDay() - dowOffset; //the day of week the year begins on\r\n    day = (day >= 0 ? day : day + 7);\r\n    let daynum = Math.floor((this.getTime() - newYear.getTime() - \r\n    (this.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000) + 1;\r\n    let weeknum;\r\n    //if the year starts before the middle of a week\r\n    if(day < 4) {\r\n      weeknum = Math.floor((daynum+day-1)/7) + 1;\r\n      if(weeknum > 52) {\r\n        let nYear = new Date(this.getFullYear() + 1,0,1);\r\n        let nday = nYear.getDay() - dowOffset;\r\n        nday = nday >= 0 ? nday : nday + 7;\r\n        /*if the next year starts before the middle of\r\n          the week, it is week #1 of that year*/\r\n        weeknum = nday < 4 ? 1 : 53;\r\n      }\r\n    }\r\n    else {\r\n      weeknum = Math.floor((daynum+day-1)/7);\r\n    }\r\n    return weeknum;\r\n}\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalStyles />\r\n     <Route />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\GlobalStyles.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Route.js",["117"],"import Header from './Header';\r\nimport {Switch, Route, HashRouter as Router} from 'react-router-dom';\r\nimport Home from '../router/Home';\r\nimport Admin from '../router/Admin';\r\nimport Lda from '../router/Lda';\r\nimport Model from '../router/Model';\r\nimport Test from '../router/Test';\r\nconst router = () => {\r\n    \r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                <Route path={\"/\"} exact component={Home}></Route>\r\n                <Route path={\"/lda\"} exact component={Lda}></Route>\r\n                <Route path={\"/model\"} exact component={Model}></Route>\r\n                <Route path={\"/admin\"} exact component={Admin}></Route>                \r\n                {/* <Route path={\"/test\"} exact component={Test}></Route>                 */}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default router;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Header.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaContainer.js",["118"],"import {useEffect, useState, useRef} from 'react';\r\nimport { serverApi } from '../../api';\r\nimport LdaPresenter from './LdaPresenter';\r\nimport getDateCondition from '../../js/common';\r\nconst LdaContainer = () => {    \r\n\r\n    const [searchDate, setSearchDate] = useState(new Date());        \r\n    const [period,     setPeriod]     = useState(\"week\");\r\n    const [condition, setCondition] = useState({\"date\": new Date(), \"period\":'week'});\r\n    const [state,      setState]      = useState({\r\n        result:{columns:\"\", data:\"\"},\r\n        error:\"\",\r\n        loading:true\r\n    });\r\n    const dateRef = useRef(null);\r\n    \r\n    // 검색 기간 업데이트 함수\r\n    const _handler_on_period = (e) =>{\r\n        // 선택된 기간에 따라 date input 조절\r\n        setPeriod(e.target.value);\r\n        const value = e.target.value;\r\n        if (value === 'week'){\r\n            dateRef.current.type='date';\r\n        }else if (value === 'year'){\r\n            // 년도 제한설정\r\n            dateRef.current.type='number';\r\n            dateRef.current.min='2000';\r\n            dateRef.current.max='2099';\r\n            dateRef.current.step='1';\r\n            dateRef.current.default='2000';\r\n        }else{\r\n            dateRef.current.type='month';\r\n        }\r\n    }    \r\n    // 검색 날짜 업데이트 함수\r\n    const _handler_on_date = (e) => {\r\n        setSearchDate(e.target.value);\r\n    }    \r\n    \r\n    // 날짜 formatter\r\n    const dateFormatter = (cell, row) => {\r\n        const date = new Date(cell)\r\n        return(\r\n            <span>\r\n                {date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate() }\r\n            </span>\r\n        )\r\n    }\r\n    // float 값 출력 제한\r\n    const floatFormatter = (cell, row) => {\r\n        return ( <p>{cell.toFixed(3)}</p>);\r\n    }\r\n    // category formatter\r\n    const categoryFormatter = (cell, row) => {\r\n        let category =\"\";\r\n        switch(cell){\r\n            case 0: category = \"CPU/메인보드 / 램\"; break;\r\n            case 1: category = \"그래픽카드\";        break;\r\n            case 2: category = \"공랭/수랭쿨러\";     break;\r\n            case 3: category = \"SSD/HDD/USB\";      break;\r\n            case 4: category = \"모니터/TV\";        break;\r\n            case 5: category = \"네트워크/인터넷\";   break;\r\n            case 6: category = \"OS/소프트웨어\";     break;\r\n            case 7: category = \"파워서플라이\";      break;\r\n            case 8: category = \"키보드/마우스\";     break;\r\n            case 9: category = \"오버클러킹\";        break;\r\n            default : category = \"잘못입력된 값입니다. :\" +cell.toString();\r\n                break;\r\n        }        \r\n        return(\r\n            <span>\r\n                {category}\r\n            </span>\r\n        )\r\n    }\r\n    // table column style\r\n    const headerStyle = {\r\n        width:'50px',\r\n        fontSize:'0.8rem',\r\n        backgroundColor:\"skyblue\"\r\n    }\r\n    const headerStyle2 = {\r\n        width:'200px',\r\n        fontSize:'0.8rem',\r\n        backgroundColor:\"skyblue\"\r\n    }\r\n    const columnStyle = {\r\n        fontSize:'0.8rem',\r\n        backgroundColor:\"white\"\r\n    }\r\n\r\n    // 시각화 자료 찾기\r\n    const searchPlot = async (e) => {\r\n        e.preventDefault();\r\n        console.log('searchPlot');\r\n        let new_doc = {'date':searchDate, 'period':period};\r\n        setCondition({...new_doc});       \r\n        const date = new Date(searchDate);        \r\n        searchTable(date, period);\r\n    }\r\n\r\n    // model 활동 내역 table 조회\r\n    const searchTable = async (date, period) => {\r\n        let cond = getDateCondition(date, period);\r\n        cond['weekofyear'] = cond['week'];\r\n        delete cond['week'];\r\n        \r\n        let result = null;\r\n        try {\r\n            ({data:result} = await serverApi.getLdaTable(cond));\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }finally{\r\n            if( result !== null){\r\n                console.log('confirm');                                \r\n                const columns = [\r\n                    {dataField: 'key_value', text: '행렬번호', hidden:true},         \r\n                    {dataField: 'datetime', text: '작성시간', formatter:dateFormatter, sort:true,\r\n                     headerStyle: headerStyle, style:columnStyle},\r\n                    {dataField: 'Perc_Contribution', text: '기여도', formatter:floatFormatter, sort:true,\r\n                     headerStyle: headerStyle, style:columnStyle},\r\n                    {dataField: 'label', text: 'category', formatter:categoryFormatter, sort:true,\r\n                     headerStyle: headerStyle, style:columnStyle},\r\n                    {dataField: 'board_content', text: '작성내용', sort:true,\r\n                     headerStyle: headerStyle2, style:columnStyle}                    \r\n                ]\r\n                result.column= columns;\r\n                setState({result ,loading:false});\r\n            }            \r\n        }\r\n    }\r\n\r\n    // 최초에는 최근 일자만 검색\r\n    useEffect( ()=> {\r\n        const date = new Date();\r\n        setSearchDate(date);        \r\n        searchTable(date, period);\r\n    }, []);\r\n    \r\n    return (<LdaPresenter searchPlot          = {searchPlot}\r\n                           dateRef            = {dateRef}\r\n                           period             = {period}\r\n                           _handler_on_period = {_handler_on_period}\r\n                           searchDate         = {searchDate}\r\n                           _handler_on_date   = {_handler_on_date}\r\n                           condition          = {condition}\r\n                           state              = {state}\r\n\r\n            />);\r\n}\r\n\r\nexport default LdaContainer;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomeContainer.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelContainer.js",["119","120"],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminContainer.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminPresenter.js",["121"],"import styled from 'styled-components';\r\n\r\n\r\nconst AdminPresenter = () => {\r\n    return (<div>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default AdminPresenter;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\api.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomePresenter.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaPresenter.js",["122"],"import styled from 'styled-components';\r\nimport Article from '../../components/Article';\r\nimport Loader from '../../components/Loader';\r\nimport Table1 from '../../components/Table1';\r\n\r\nconst StyledDiv = styled.div`\r\n    padding-left:30px;\r\n`;\r\n\r\nconst StyledSection = styled.section`\r\n    display:grid;\r\n    grid-template-columns: 45em 50em;\r\n    grid-template-rows : 20em;\r\n    grid-row: auto;\r\n    grid-column-gap: 30px;    \r\n`;\r\nconst SubSection = styled.section`\r\n    padding-top: 10px;\r\n    display : flex;  \r\n    flex-direction:column;\r\n`\r\nconst InputLabel = styled.label`\r\n    align-items:flex-end;\r\n    font-size:1.2rem;\r\n`;\r\nconst StyledP = styled.p`\r\n    padding-bottom:5px;\r\n`;\r\nconst StyledForm = styled.form`\r\n    padding-top:15px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:flex-end;\r\n`;\r\nconst LdaPresenter = ({searchPlot, \r\n                        dateRef,\r\n                        period,\r\n                        _handler_on_period,\r\n                        searchDate,                        \r\n                        _handler_on_date,\r\n                        condition,\r\n                        state                  \r\n                    }) => {\r\n    const {result, error, loading} = state;\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <StyledForm onSubmit={searchPlot}>\r\n                <InputLabel htmlFor ='date'>기간 선택 </InputLabel>\r\n                <select id = 'opts' size='1' name='opts' value={period} onChange={_handler_on_period}>\r\n                    <option value='week' seleted=\"selected\">  week</option>\r\n                    <option value='month'>month</option>\r\n                    <option value='year'>year</option>\r\n                </select>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <InputLabel htmlFor ='date'>일자 선택 </InputLabel>\r\n                <input id='date' name='date' type='date' value ={searchDate} onChange={_handler_on_date} ref={dateRef}/>                                \r\n                <input type='submit' value='click'/>\r\n            </StyledForm>\r\n            <StyledSection>\r\n                \r\n                <SubSection>\r\n                    <StyledP>LDA 분석 시각화 </StyledP>\r\n                    <Article id=\"dataLdaScatter\" \r\n                             graphSort = {'dataLdaScatter'}\r\n                             condition = {condition}\r\n                             />\r\n                </SubSection>\r\n                <SubSection>\r\n                    {loading ? (<Loader />) : (\r\n                    <>\r\n                    <StyledP>LDA 분석내용 </StyledP>\r\n                    <Table1 \r\n                    \r\n                        result = {result}\r\n                    />\r\n                    </>\r\n                    )}\r\n                    \r\n                </SubSection>\r\n            </StyledSection>\r\n        </StyledDiv>            \r\n    );\r\n}\r\n\r\nexport default LdaPresenter;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelPresenter.js",["123","124","125","126","127"],"import styled from 'styled-components';\r\nimport Article from '../../components/Article';\r\nimport Loader from '../../components/Loader';\r\nimport Table1 from '../../components/Table1';\r\n\r\nconst StyledDiv = styled.div`\r\n    padding-left:30px;\r\n`;\r\nconst StyledSection = styled.section`\r\n    display:grid;\r\n    grid-template-columns: 45em 50em;\r\n    grid-template-rows : 20em;\r\n    grid-row: auto;\r\n    grid-column-gap: 50px;    \r\n`;\r\nconst SubSection = styled.section`\r\n    padding-top: 10px;\r\n    display : flex;  \r\n    flex-direction:column;\r\n`\r\nconst InputLabel = styled.label`\r\n    align-items:flex-end;\r\n    font-size:1.2rem;\r\n`;\r\nconst StyledP = styled.p`\r\n    padding-bottom:5px;\r\n`;\r\nconst StyledForm = styled.form`\r\n    padding-top:15px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:flex-end;\r\n`;\r\nconst ModelPresenter = ({searchPlot, \r\n                        dateRef,\r\n                        period,\r\n                        _handler_on_period,\r\n                        searchDate,                        \r\n                        _handler_on_date,\r\n                        condition,\r\n                        state                  \r\n                    }) => {\r\n    const {result, error, loading} = state;\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <StyledForm onSubmit={searchPlot}>\r\n                <InputLabel htmlFor ='date'>기간 선택 </InputLabel>\r\n                <select id = 'opts' size='1' name='opts' value={period} onChange={_handler_on_period}>\r\n                    <option value='week' seleted=\"selected\">  week</option>\r\n                    <option value='month'>month</option>\r\n                    <option value='year'>year</option>\r\n                </select>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <InputLabel htmlFor ='date'>일자 선택 </InputLabel>\r\n                <input id='date' name='date' type='date' value ={searchDate} onChange={_handler_on_date} ref={dateRef}/>                                \r\n                <input type='submit' value='click'/>\r\n            </StyledForm>\r\n            <StyledSection>\r\n\r\n                <SubSection>\r\n                    <StyledP>모델 작업 통계 </StyledP>\r\n                    <Article id=\"dataModelClassification\" \r\n                             graphSort= {'dataModelClassification'}\r\n                             condition= {condition}\r\n                             />\r\n                </SubSection>\r\n                {/* <SubSection>\r\n                    {loading ? (<Loader />) : (\r\n                    <>\r\n                    <StyledP>모델 작업 내용 </StyledP>\r\n                    <Table1 \r\n                        result = {result}\r\n                    />\r\n                    </>\r\n                    )}\r\n                    \r\n                </SubSection> */}\r\n            </StyledSection>\r\n        </StyledDiv>            \r\n    );\r\n}\r\n\r\nexport default ModelPresenter;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Article.js",["128","129","130","131","132"],"import styled from 'styled-components';\r\nimport {useEffect, useState, useRef} from 'react';\r\nimport React, {ReactDOM} from 'react-dom';\r\nimport {serverApi} from '../api';\r\nimport getDateCondition from '../js/common';\r\nimport Loader from './Loader';\r\nimport reactDom from 'react-dom';\r\n\r\nconst StyledArticle = styled.article`\r\nborder-radius : 5px 0px 0px 5px;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: 1;\r\ncolor:black;\r\nfont-size:1rem;\r\n`;\r\n\r\nconst Article = ({\r\n    id,    \r\n    graphSort,\r\n    condition\r\n    }) => {\r\n        // state 설정\r\n        const [loading, setLoading]        = useState(true);\r\n        const [error, setError]            = useState(\"\");\r\n        const [keyState, setKeyState]      = useState(\"\");\r\n        const [empty, setEmpty]            = useState(true);\r\n        const itSelf =  useRef(null);\r\n        // plot 화면에 띄우기\r\n        const showBokeh = (plot, div_id) => {\r\n            console.log(div_id, \"bokeh start\");        \r\n            reactDom.findDOMNode(itSelf.current).innerHTML = \"\";\r\n            window.Bokeh.embed.embed_item(plot, div_id);                                               \r\n        } \r\n\r\n        // plot load\r\n        const setPlot = async () => {\r\n            console.log(id, 'setplot function start'); \r\n\r\n            if (itSelf.current !== null){\r\n                reactDom.findDOMNode(itSelf.current).innerHTML =\"<p>로딩중</p>\";\r\n                console.log(itSelf.current);\r\n                \r\n            }\r\n            \r\n            const date = new Date(condition['date']);            \r\n            const period = condition['period'];\r\n            let searchMap = {};\r\n            searchMap = getDateCondition(date, period);\r\n            \r\n            searchMap['graphSort'] = graphSort;\r\n            searchMap['period'] = period;\r\n            // 내부 변수           \r\n            let plot = null;\r\n            let empty = null;\r\n            setLoading(true);            \r\n            //setKeyState(\"random\"); // key 설정만 새로 해줘도 tag 초기화 된다.\r\n            console.log(searchMap);\r\n            try{                        \r\n                searchMap['graphSort'] = graphSort;\r\n                let response = await serverApi.getBokeh(searchMap);\r\n                console.log(id,'load data result',response === null);                \r\n                if( response !== null){\r\n                    ({data:{data:{empty}}} = response);                    \r\n                    if (!empty){\r\n                        setEmpty(false);\r\n                        ({data:{data:{plot:{plot}}}} = response);\r\n                        console.log(plot);\r\n                        showBokeh(plot, id);\r\n                    }else{\r\n                        setEmpty(true);\r\n                    }                                        \r\n                }                \r\n            }catch(err){\r\n                setError(err);     \r\n                console.log(error);\r\n            }finally{\r\n                setLoading(false);   \r\n                if (plot !== null){                    \r\n                    console.log(id, 'load complete');          \r\n                }\r\n            }            \r\n        }\r\n        // plot 설정\r\n        useEffect(()=>{          \r\n            console.log(id, 'rerender start');\r\n            setPlot();            \r\n        },[condition]);\r\n        return (\r\n            <>\r\n            {\r\n                empty ? (<p style={{color:'red'}}>데이터가 없습니다. 다른 기간을 입력해 주세요</p>) : (\r\n                <StyledArticle id={id}  \r\n                key={keyState}\r\n                ref= {itSelf}                \r\n                />\r\n                \r\n                )\r\n            }\r\n            </>            \r\n    )\r\n}\r\n\r\nexport default Article;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Loader.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Table1.js",["133"],"import { useEffect } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nconst Table1 = (\r\n    {result}\r\n) => {\r\n    const {empty, column, product} = result;\r\n\r\n    const sizePerPageList = [\r\n        {text: 'All', value:5}\r\n    ];\r\n    const options = {\r\n        sizePerPageList\r\n    };\r\n    return <div>        \r\n        {empty ? (<>\r\n        <p> 해당하신 일자에는 데이터가 없습니다.</p>        \r\n        </>) : result && (\r\n            <BootstrapTable keyField='key_value' \r\n                            data={product}\r\n                            columns={ column }\r\n                            striped\r\n                            hover\r\n                            pagination={ paginationFactory(options) } /> \r\n        )}\r\n        \r\n        \r\n    </div>\r\n}\r\n\r\nexport default Table1","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\js\\common.js",["134"],"\r\n\r\nconst getDateCondition = (dateStr, period) => {\r\n    const date = new Date(dateStr);\r\n    let dateCond = {};\r\n    let week = date.getWeek().toString();\r\n    if ( week.length ===1){\r\n        week = '0' + week;    \r\n    }        \r\n    let month = (date.getMonth() +1).toString();\r\n    if ( month.length ===1){\r\n        month = '0' + month;    \r\n    }        \r\n    switch (period ){\r\n        case 'week':\r\n            dateCond['year']  = date.getFullYear().toString();\r\n            dateCond['month'] = month;\r\n            dateCond['week']  = week;\r\n            break;\r\n        case 'month':\r\n            dateCond['year']  = date.getFullYear().toString();\r\n            dateCond['month'] = month;\r\n            break;\r\n        case 'year':\r\n            dateCond['year']  = date.getFullYear().toString();\r\n            break;\r\n    }\r\n    return dateCond;\r\n}\r\n\r\nexport default getDateCondition;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Test\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Test\\TestContainer.js",["135","136","137","138"],"import {useEffect, useState, useRef} from 'react';\r\nimport { serverApi } from '../../api';\r\nimport TestPresenter from './TestPresenter';\r\nimport getDateCondition from '../../js/common';\r\nconst TestContainer = () => {    \r\n\r\n    const [searchDate, setSearchDate] = useState(new Date());        \r\n    const [period,     setPeriod]     = useState(\"week\");\r\n    const [condition, setCondition] = useState({\"date\": new Date(), \"period\":'week'});\r\n    const [state,      setState]      = useState({\r\n        result:{columns:\"\", data:\"\"},\r\n        error:\"\",\r\n        loading:true\r\n    });\r\n    const dateRef = useRef(null);\r\n    \r\n    // 검색 기간 업데이트 함수\r\n    const _handler_on_period = (e) =>{\r\n        // 선택된 기간에 따라 date input 조절\r\n        setPeriod(e.target.value);\r\n        const value = e.target.value;\r\n        if (value === 'week'){\r\n            dateRef.current.type='date';\r\n        }else if (value === 'year'){\r\n            // 년도 제한설정\r\n            dateRef.current.type='number';\r\n            dateRef.current.min='2000';\r\n            dateRef.current.max='2099';\r\n            dateRef.current.step='1';\r\n            dateRef.current.default='2000';\r\n        }else{\r\n            dateRef.current.type='month';\r\n        }\r\n\r\n    }    \r\n    // 검색 날짜 업데이트 함수\r\n    const _handler_on_date = (e) => {\r\n        setSearchDate(e.target.value);\r\n    }\r\n    // Data.protype에 주차 구하는 새로운 함수 생성\r\n\r\n    // 날짜 formatter\r\n    const dateFormatter = (cell, row) => {\r\n        const date = new Date(cell)\r\n        return(\r\n            <span>\r\n                {date.getFullYear() + \"-\" + date.getMonth() + \"-\" + date.getDate() }\r\n            </span>\r\n        )\r\n    }\r\n    // category formatter\r\n    const categoryFormatter = (cell, row) => {\r\n        let category =\"\";\r\n        switch(cell){\r\n            case 0: category = \"CPU/메인보드 / 램\"; break;\r\n            case 1: category = \"그래픽카드\";        break;\r\n            case 2: category = \"공랭/수랭쿨러\";     break;\r\n            case 3: category = \"SSD/HDD/USB\";      break;\r\n            case 4: category = \"모니터/TV\";        break;\r\n            case 5: category = \"네트워크/인터넷\";   break;\r\n            case 6: category = \"OS/소프트웨어\";     break;\r\n            case 7: category = \"파워서플라이\";      break;\r\n            case 8: category = \"키보드/마우스\";     break;\r\n            case 9: category = \"오버클러킹\";        break;\r\n            default : category = \"잘못입력된 값입니다. :\" +cell.toString();\r\n                break;\r\n        }        \r\n        return(\r\n            <span>\r\n                {category}\r\n            </span>\r\n        )\r\n    }     \r\n    // table column style\r\n    const headerStyle = {\r\n        width:'50px',\r\n        fontSize:'0.8rem',\r\n        backgroundColor:\"skyblue\"\r\n    }\r\n    const headerStyle2 = {\r\n        width:'200px',\r\n        fontSize:'0.8rem',\r\n        backgroundColor:\"skyblue\"\r\n    }\r\n    const columnStyle = {\r\n        fontSize:'0.8rem',\r\n        backgroundColor:\"white\"\r\n    }\r\n\r\n    // model 활동 내역 table 조회\r\n    const searchTable = async (date, period) => {\r\n        let cond = getDateCondition(date, period);\r\n        let result = null;\r\n        try {\r\n            ({data:result} = await serverApi.getModelTable(condition));\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }finally{\r\n            if( result !== null){\r\n                console.log('confirm');                                \r\n                const columns = [\r\n                    {dataField: 'key_value', text: '행렬번호', hidden:true},         \r\n                    {dataField: 'datetime', text: '작성시간', formatter:dateFormatter, sort:true,\r\n                     headerStyle: headerStyle, style:columnStyle},\r\n                    {dataField: 'label', text: '기존 category', formatter:categoryFormatter, sort:true,\r\n                     headerStyle: headerStyle, style:columnStyle},\r\n                    {dataField: 'prediction', text: '모델 지정 category', formatter:categoryFormatter, sort:true,\r\n                     headerStyle: headerStyle, style:columnStyle},\r\n                    {dataField: 'content', text: '작성내용', sort:true,\r\n                     headerStyle: headerStyle2, style:columnStyle}                    \r\n                ]\r\n                result.column= columns;                          \r\n                setState({result ,loading:false});\r\n            }            \r\n        }\r\n    }\r\n\r\n    const searchPlot = async (e) => {\r\n        e.preventDefault();\r\n        console.log('testPlot');\r\n        let new_doc = {'date':searchDate, 'period':period};\r\n        let plot = 0\r\n        plot =  await serverApi.getTestBokeh();\r\n        let item = plot['data']['data']['plot']\r\n        console.log(plot['data']['data']);\r\n        console.log(item);\r\n        if (plot !== 0 ){\r\n            window.Bokeh.embed.embed_item(item, \"testPlot\");\r\n        }\r\n        // setCondition({...new_doc});       \r\n        //const date = new Date(searchDate);        \r\n        //searchTable(date. period);\r\n    }\r\n\r\n    // 최초에는 최근 일자만 검색\r\n    useEffect( ()=> {\r\n        const date = new Date();\r\n        setSearchDate(date);        \r\n        searchTable(date, period);\r\n    }, []);\r\n    \r\n    return (<TestPresenter searchPlot         = {searchPlot}\r\n                            dateRef            = {dateRef}\r\n                            period             = {period}\r\n                            _handler_on_period = {_handler_on_period}\r\n                            searchDate         = {searchDate}\r\n                            _handler_on_date   = {_handler_on_date}\r\n                            condition          = {condition}\r\n                            state              = {state}\r\n\r\n            />);\r\n}\r\n\r\nexport default TestContainer;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Test\\TestPresenter.js",["139","140"],"import styled from 'styled-components';\r\nimport Article from '../../components/Article';\r\nimport Loader from '../../components/Loader';\r\nimport Table1 from '../../components/Table1';\r\n\r\nconst StyledDiv = styled.div`\r\n    padding-left:30px;\r\n`;\r\nconst StyledSection = styled.section`\r\n    display:grid;\r\n    grid-template-columns: 45em 50em;\r\n    grid-template-rows : 20em;\r\n    grid-row: auto;\r\n    grid-column-gap: 50px;    \r\n`;\r\nconst SubSection = styled.section`\r\n    padding-top: 10px;\r\n    display : flex;  \r\n    flex-direction:column;\r\n`\r\nconst InputLabel = styled.label`\r\n    align-items:flex-end;\r\n    font-size:1.2rem;\r\n`;\r\nconst StyledP = styled.p`\r\n    padding-bottom:5px;\r\n`;\r\nconst StyledForm = styled.form`\r\n    padding-top:15px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:flex-end;\r\n`;\r\nconst TestPresenter = ({searchPlot, \r\n                        dateRef,\r\n                        period,\r\n                        _handler_on_period,\r\n                        searchDate,                        \r\n                        _handler_on_date,\r\n                        condition,\r\n                        state                  \r\n                    }) => {\r\n    const {result, error, loading} = state;\r\n\r\n    return (\r\n        <StyledDiv>\r\n            <StyledForm onSubmit={searchPlot}>\r\n                <InputLabel htmlFor ='date'>기간 선택 </InputLabel>\r\n                <select id = 'opts' size='1' name='opts' value={period} onChange={_handler_on_period}>\r\n                    <option value='week' seleted=\"selected\">  week</option>\r\n                    <option value='month'>month</option>\r\n                    <option value='year'>year</option>\r\n                </select>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <InputLabel htmlFor ='date'>일자 선택 </InputLabel>\r\n                <input id='date' name='date' type='date' value ={searchDate} onChange={_handler_on_date} ref={dateRef}/>                                \r\n                <input type='submit' value='click'/>\r\n            </StyledForm>\r\n            <StyledSection>\r\n                <div id='testPlot' />\r\n                {/* <SubSection>\r\n                    <StyledP>모델 작업 통계 </StyledP>\r\n                    <Article id=\"testPlot\" \r\n                             graphSort= {'testPlot'}\r\n                             condition= {condition}\r\n                             />\r\n                </SubSection> */}\r\n                <SubSection>\r\n                    {loading ? (<Loader />) : (\r\n                    <>\r\n                    <StyledP>모델 작업 내용 </StyledP>\r\n                    <Table1 \r\n                        result = {result}\r\n                    />\r\n                    </>\r\n                    )}\r\n                    \r\n                </SubSection>\r\n            </StyledSection>\r\n        </StyledDiv>            \r\n    );\r\n}\r\n\r\nexport default TestPresenter;",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":31,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":12},{"ruleId":"153","severity":1,"message":"154","line":139,"column":8,"nodeType":"155","endLine":139,"endColumn":10,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":128,"column":21,"nodeType":"159","messageId":"160","endLine":128,"endColumn":33,"fix":"161"},{"ruleId":"153","severity":1,"message":"154","line":136,"column":8,"nodeType":"155","endLine":136,"endColumn":10,"suggestions":"162"},{"ruleId":"149","severity":1,"message":"163","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":14},{"ruleId":"149","severity":1,"message":"164","line":44,"column":20,"nodeType":"151","messageId":"152","endLine":44,"endColumn":25},{"ruleId":"149","severity":1,"message":"165","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"166","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":14},{"ruleId":"149","severity":1,"message":"167","line":43,"column":12,"nodeType":"151","messageId":"152","endLine":43,"endColumn":18},{"ruleId":"149","severity":1,"message":"164","line":43,"column":20,"nodeType":"151","messageId":"152","endLine":43,"endColumn":25},{"ruleId":"149","severity":1,"message":"168","line":43,"column":27,"nodeType":"151","messageId":"152","endLine":43,"endColumn":34},{"ruleId":"149","severity":1,"message":"169","line":3,"column":16,"nodeType":"151","messageId":"152","endLine":3,"endColumn":24},{"ruleId":"149","severity":1,"message":"165","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":14},{"ruleId":"149","severity":1,"message":"168","line":24,"column":16,"nodeType":"151","messageId":"152","endLine":24,"endColumn":23},{"ruleId":"149","severity":1,"message":"170","line":26,"column":26,"nodeType":"151","messageId":"152","endLine":26,"endColumn":37},{"ruleId":"153","severity":1,"message":"171","line":88,"column":11,"nodeType":"155","endLine":88,"endColumn":22,"suggestions":"172"},{"ruleId":"149","severity":1,"message":"173","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":14,"column":5,"nodeType":"176","messageId":"177","endLine":27,"endColumn":6},{"ruleId":"149","severity":1,"message":"178","line":9,"column":23,"nodeType":"151","messageId":"152","endLine":9,"endColumn":35},{"ruleId":"149","severity":1,"message":"179","line":92,"column":13,"nodeType":"151","messageId":"152","endLine":92,"endColumn":17},{"ruleId":"149","severity":1,"message":"180","line":122,"column":13,"nodeType":"151","messageId":"152","endLine":122,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":141,"column":8,"nodeType":"155","endLine":141,"endColumn":10,"suggestions":"181"},{"ruleId":"149","severity":1,"message":"182","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":15},{"ruleId":"149","severity":1,"message":"164","line":43,"column":20,"nodeType":"151","messageId":"152","endLine":43,"endColumn":25},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'period' and 'searchTable'. Either include them or remove the dependency array.","ArrayExpression",["185"],"no-whitespace-before-property","Unexpected whitespace before property period.","MemberExpression","unexpectedWhitespace",{"range":"186","text":"187"},["188"],"'styled' is defined but never used.","'error' is assigned a value but never used.","'Loader' is defined but never used.","'Table1' is defined but never used.","'result' is assigned a value but never used.","'loading' is assigned a value but never used.","'ReactDOM' is defined but never used.","'setKeyState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setPlot'. Either include them or remove the dependency array.",["189"],"'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setCondition' is assigned a value but never used.","'cond' is assigned a value but never used.","'new_doc' is assigned a value but never used.",["190"],"'Article' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},[4688,4690],".",{"desc":"191","fix":"193"},{"desc":"194","fix":"195"},{"desc":"191","fix":"196"},"Update the dependencies array to be: [period, searchTable]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [condition, id, setPlot]",{"range":"200","text":"201"},{"range":"202","text":"198"},[4926,4928],"[period, searchTable]",[4870,4872],[3282,3293],"[condition, id, setPlot]",[5080,5082]]