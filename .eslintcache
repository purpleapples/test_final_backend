[{"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\index.js":"1","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\App.js":"2","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Route.js":"3","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\GlobalStyles.js":"4","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Header.js":"5","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\index.js":"6","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\index.js":"7","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\index.js":"8","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\index.js":"9","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaContainer.js":"10","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomeContainer.js":"11","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminContainer.js":"12","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelContainer.js":"13","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaPresenter.js":"14","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminPresenter.js":"15","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomePresenter.js":"16","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Article.js":"17","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\api.js":"18","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Loader.js":"19","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Table1.js":"20","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelPresenter.js":"21"},{"size":396,"mtime":1612585818760,"results":"22","hashOfConfig":"23"},{"size":415,"mtime":1612585818758,"results":"24","hashOfConfig":"23"},{"size":734,"mtime":1612834592718,"results":"25","hashOfConfig":"23"},{"size":591,"mtime":1612789629324,"results":"26","hashOfConfig":"23"},{"size":1828,"mtime":1612789629325,"results":"27","hashOfConfig":"23"},{"size":75,"mtime":1612585818764,"results":"28","hashOfConfig":"23"},{"size":81,"mtime":1612789629331,"results":"29","hashOfConfig":"23"},{"size":78,"mtime":1612585818763,"results":"30","hashOfConfig":"23"},{"size":80,"mtime":1612585818762,"results":"31","hashOfConfig":"23"},{"size":4595,"mtime":1612854287772,"results":"32","hashOfConfig":"23"},{"size":3782,"mtime":1612834619374,"results":"33","hashOfConfig":"23"},{"size":193,"mtime":1612585818761,"results":"34","hashOfConfig":"23"},{"size":6666,"mtime":1612879475498,"results":"35","hashOfConfig":"23"},{"size":2671,"mtime":1612853454133,"results":"36","hashOfConfig":"23"},{"size":147,"mtime":1612585818761,"results":"37","hashOfConfig":"23"},{"size":3237,"mtime":1612620089384,"results":"38","hashOfConfig":"23"},{"size":2373,"mtime":1612836607063,"results":"39","hashOfConfig":"23"},{"size":1788,"mtime":1612853834512,"results":"40","hashOfConfig":"23"},{"size":383,"mtime":1612585818760,"results":"41","hashOfConfig":"23"},{"size":816,"mtime":1612879328855,"results":"42","hashOfConfig":"23"},{"size":2677,"mtime":1612853726389,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"a892bn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\index.js",[],["95","96"],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\App.js",["97"],"import Route from './Route';\r\nimport GlobalStyles from './GlobalStyles';\r\nfunction App() {\r\n  // 함수 최초 설정\r\n  Date.prototype.getWeek = function() {\r\n    var onejan = new Date(this.getFullYear(),0,1);\r\n    return Math.ceil((((this - onejan) / 86400000) + onejan.getDay()+1)/7);\r\n}\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalStyles />\r\n     <Route />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Route.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\GlobalStyles.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Header.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\index.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaContainer.js",["98"],"import {useEffect, useState, useRef} from 'react';\r\nimport { serverApi } from '../../api';\r\nimport LdaPresenter from './LdaPresenter';\r\nconst LdaContainer = () => {    \r\n    const initialDoc = {\r\n        \"year\"  : new Date().getFullYear(),\r\n        \"month\" : new Date().getMonth(),\r\n        \"week\"  : new Date().getWeek(),\r\n        \"graphSort\" : \"\"\r\n    }\r\n\r\n    const [searchDate, setSearchDate] = useState(new Date());        \r\n    const [period,     setPeriod]     = useState(\"week\");\r\n    const [condition1, setCondition1] = useState({...initialDoc, \"graphSort\": \"dataLdaScatter\"});\r\n    const [condition2, setCondition2] = useState({...initialDoc, \"graphSort\": \"dataLdaTable\"});\r\n    const [state,      setState]      = useState({\r\n        result:{columns:\"\", data:\"\"},\r\n        error:\"\",\r\n        loading:true\r\n    })\r\n    const dateRef = useRef(null);\r\n    \r\n    // 검색 기간 업데이트 함수\r\n    const _handler_on_period = (e) =>{\r\n        // 선택된 기간에 따라 date input 조절\r\n        setPeriod(e.target.value);\r\n        const value = e.target.value;\r\n        if (value === 'week'){\r\n            dateRef.current.type='date';\r\n        }else if (value === 'year'){\r\n            // 년도 제한설정\r\n            dateRef.current.type='number';\r\n            dateRef.current.min='2000';\r\n            dateRef.current.max='2099';\r\n            dateRef.current.step='1';\r\n            dateRef.current.default='2000';\r\n        }else{\r\n            dateRef.current.type='month';\r\n        }\r\n        \r\n    }    \r\n    // 검색 날짜 업데이트 함수\r\n    const _handler_on_date = (e) => {\r\n        setSearchDate(e.target.value);\r\n    }\r\n    // Data.protype에 주차 구하는 새로운 함수 생성\r\n\r\n    const searchPlot = async (e) => {\r\n        e.preventDefault();\r\n        const date = new Date(searchDate);\r\n        const new_doc = {};\r\n        switch (period ){\r\n            case 'week':\r\n                new_doc['year']  = date.getFullYear();\r\n                new_doc['month'] = date.getMonth();\r\n                new_doc['week']  = date.getWeek();\r\n                new_doc['period'] = period;\r\n                break;\r\n            case 'month':\r\n                new_doc['year']  = date.getFullYear();\r\n                new_doc['month'] = date.getMonth();\r\n                new_doc['period'] = period;\r\n                break;\r\n            case 'year':\r\n                new_doc['year']  = date.getFullYear();\r\n                new_doc['period'] = period;\r\n                break;\r\n        }\r\n\r\n        // 검색조건 새로 배정\r\n        new_doc['graphSort'] = condition1['graphSort'];\r\n        setCondition1({...new_doc});\r\n        new_doc['graphSort'] = condition2['graphSort'];\r\n        setCondition2({...new_doc});   \r\n\r\n        new_doc['graphSort'] = \"dataLdaTable\"\r\n        searchTable(new_doc);\r\n    }\r\n\r\n    const searchTable = async (condition) => {\r\n        let result = null;\r\n        try {\r\n            \r\n            ({data:result} = await serverApi.getLdaTable(condition));\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }finally{\r\n            if( result !== null){\r\n                console.log('confirm');\r\n                console.log(result);\r\n\r\n                // 기여도와 일자는 정렬\r\n                result.columns[0]['sort'] = true;\r\n                result.columns[1]['sort'] = true;\r\n                \r\n                console.log((result.product ));                                \r\n                setState({result ,loading:false});\r\n            }            \r\n        }\r\n    }\r\n\r\n    useEffect( ()=> {\r\n        const date = new Date();\r\n        setSearchDate(date);\r\n        let new_doc = {};\r\n        new_doc['year']  = date.getFullYear();\r\n        new_doc['month'] = date.getMonth();\r\n        new_doc['week']  = date.getWeek();\r\n        new_doc['period'] = 'week';\r\n        new_doc['graphSort'] = \"dataLdaTable\"\r\n        console.log(new_doc);\r\n        searchTable(new_doc);\r\n    }, []);\r\n    \r\n    return (<LdaPresenter searchPlot          = {searchPlot}\r\n                           dateRef            = {dateRef}\r\n                           period             = {period}\r\n                           _handler_on_period = {_handler_on_period}\r\n                           searchDate         = {searchDate}\r\n                           _handler_on_date   = {_handler_on_date}\r\n                           condition1         = {condition1}\r\n                           condition2         = {condition2}\r\n                           state              = {state}\r\n\r\n            />);\r\n}\r\n\r\nexport default LdaContainer;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomeContainer.js",["99"],"import {useEffect, useState, useRef} from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nconst HomeContainer = () => {    \r\n    const initialDoc = {\r\n        \"year\"  : new Date().getFullYear(),\r\n        \"month\" : new Date().getMonth(),\r\n        \"week\"  : new Date().getWeek(),\r\n        \"graphSort\" : \"\"\r\n    }\r\n\r\n    const [searchDate, setSearchDate] = useState(new Date());        \r\n    const [period, setPeriod]         = useState(\"week\");\r\n    const [condition1, setCondition1] = useState({...initialDoc, \"graphSort\": \"dataOccur\"});\r\n    const [condition2, setCondition2] = useState({...initialDoc, \"graphSort\": \"dataFlow\"});\r\n    const [condition3, setCondition3] = useState({...initialDoc, \"graphSort\": \"categoryOccur\"});\r\n    const [condition4, setCondition4] = useState({...initialDoc, \"graphSort\": \"categoryComparison\"});\r\n    const dateRef = useRef(null);\r\n    \r\n\r\n    // 검색 기간 업데이트 함수\r\n    const _handler_on_period = (e) =>{        \r\n        // 선택된 기간에 따라 date input 조절\r\n        setPeriod(e.target.value);        \r\n        const value = e.target.value;\r\n        if (value === 'week'){\r\n            dateRef.current.type='date';\r\n        }else if (value === 'year'){\r\n            // 년도 제한설정\r\n            dateRef.current.type='number';\r\n            dateRef.current.min='2000';\r\n            dateRef.current.max='2099';\r\n            dateRef.current.step='1';\r\n            dateRef.current.default='2000';            \r\n        }else{\r\n            dateRef.current.type='month';\r\n        }\r\n        \r\n    }\r\n    \r\n    // 검색 날짜 업데이트 함수\r\n    const _handler_on_date = (e) => {\r\n        setSearchDate(e.target.value);        \r\n    }\r\n    // Data.protype에 주차 구하는 새로운 함수 생성\r\n\r\n    const searchPlot = async (e) => {\r\n        e.preventDefault();               \r\n        const date = new Date(searchDate);\r\n        const new_doc = {};            \r\n        switch (period ){\r\n            case 'week':\r\n                new_doc['year']  = date.getFullYear();\r\n                new_doc['month'] = date.getMonth();\r\n                new_doc['week']  = date.getWeek();\r\n                new_doc['period'] = period;\r\n                break;\r\n            case 'month':\r\n                new_doc['year']  = date.getFullYear();\r\n                new_doc['month'] = date.getMonth();\r\n                new_doc['period'] = period;\r\n                break;\r\n            case 'year':\r\n                new_doc['year']  = date.getFullYear();\r\n                new_doc['period'] = period;\r\n                break;\r\n        }\r\n\r\n        new_doc['graphSort'] = condition1['graphSort'];\r\n        setCondition1({...new_doc});\r\n        new_doc['graphSort'] = condition2['graphSort'];\r\n        setCondition2({...new_doc});\r\n        new_doc['graphSort'] = condition3['graphSort'];\r\n        setCondition3({...new_doc});\r\n        new_doc['graphSort'] = condition4['graphSort'];\r\n        setCondition4({...new_doc});       \r\n    }\r\n\r\n    useEffect( ()=> {\r\n        const date = new Date();\r\n        setSearchDate(date);\r\n\r\n    }, []);\r\n    \r\n    return (<HomePresenter searchPlot         = {searchPlot}\r\n                           dateRef            = {dateRef}\r\n                           period             = {period}\r\n                           _handler_on_period = {_handler_on_period}\r\n                           searchDate         = {searchDate}\r\n                           _handler_on_date   = {_handler_on_date}\r\n                           condition1         = {condition1}\r\n                           condition2         = {condition2}\r\n                           condition3         = {condition3}\r\n                           condition4         = {condition4}\r\n            />);\r\n}\r\n\r\nexport default HomeContainer;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminContainer.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelContainer.js",["100","101","102","103"],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Lda\\LdaPresenter.js",["104","105","106"],"import styled from 'styled-components';\r\nimport Article from '../../components/Article';\r\nimport Loader from '../../components/Loader';\r\nimport Table1 from '../../components/Table1';\r\nconst StyledSection = styled.section`\r\n    display:grid;\r\n    grid-template-columns: 45em 50em;\r\n    grid-template-rows : 20em;\r\n    grid-row: auto;\r\n    grid-column-gap: 50px;    \r\n`;\r\nconst SubSection = styled.section`\r\n    padding-top: 10px;\r\n    display : flex;  \r\n    flex-direction:column;\r\n`\r\nconst InputLabel = styled.label`\r\n    align-items:flex-end;\r\n    font-size:1.2rem;\r\n`;\r\nconst StyledP = styled.p`\r\n    padding-bottom:5px;\r\n`;\r\nconst StyledForm = styled.form`\r\n    padding-top:15px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:flex-end;\r\n`;\r\nconst LdaPresenter = ({searchPlot, \r\n                        dateRef,\r\n                        period,\r\n                        _handler_on_period,\r\n                        searchDate,                        \r\n                        _handler_on_date,\r\n                        condition1,\r\n                        condition2,\r\n                        state                  \r\n                    }) => {\r\n    const {result, error, loading} = state;\r\n\r\n    return (\r\n        <div>\r\n            <StyledForm onSubmit={searchPlot}>\r\n                <InputLabel htmlFor ='date'>기간 선택 </InputLabel>\r\n                <select id = 'opts' size='1' name='opts' value={period} onChange={_handler_on_period}>\r\n                    <option value='week' seleted=\"selected\">  week</option>\r\n                    <option value='month'>month</option>\r\n                    <option value='year'>year</option>\r\n                </select>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <InputLabel htmlFor ='date'>일자 선택 </InputLabel>\r\n                <input id='date' name='date' type='date' value ={searchDate} onChange={_handler_on_date} ref={dateRef}/>                                \r\n                <input type='submit' value='click'/>\r\n            </StyledForm>\r\n            <StyledSection>\r\n                sdsd\r\n                {/* <SubSection>\r\n                    <StyledP>데이터 발생량 </StyledP>\r\n                    <Article id=\"dataLdaScatter\" \r\n                             condition= {condition1}\r\n                             />\r\n                </SubSection> */}\r\n                <SubSection>       \r\n                    {loading ? (<Loader />) : <Table1 \r\n                        result = {result}\r\n                    />}\r\n                    \r\n                </SubSection>\r\n            </StyledSection>\r\n        </div>            \r\n    );\r\n}\r\n\r\nexport default LdaPresenter;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Admin\\AdminPresenter.js",["107"],"import styled from 'styled-components';\r\n\r\n\r\nconst AdminPresenter = () => {\r\n    return (<div>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default AdminPresenter;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Home\\HomePresenter.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Article.js",["108"],"import styled from 'styled-components';\r\nimport {useEffect, useState} from 'react';\r\nimport React from 'react-dom';\r\nimport {serverApi} from '../api';\r\nimport Loader from './Loader';\r\n\r\nconst StyledArticle = styled.article`\r\nborder-radius : 5px 0px 0px 5px;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: 1;\r\ncolor:black;\r\nfont-size:1rem;\r\n`;\r\n\r\nconst Article = ({\r\n    id,    \r\n    condition\r\n    }) => {\r\n        // state 설정\r\n        const [loading, setLoading]        = useState(true);\r\n        const [error, setError]            = useState(\"\");\r\n        const [keyState, setKeyState]      = useState(\"\");\r\n\r\n        // plot 화면에 띄우기\r\n        const showBokeh = (plot, div_id) => {\r\n            console.log(\"bokeh start\");\r\n            \r\n            if(plot !== null){\r\n                console.log('load plot');\r\n                console.log(id);\r\n                const bokeh  =plot.data.data.plot;\r\n                window.Bokeh.embed.embed_item(bokeh, div_id);                \r\n            }                        \r\n        } \r\n\r\n        // plot load\r\n        const setPlot = async () => {\r\n            console.log('setplot start') ;\r\n            let plot = null;       \r\n            setLoading(true);            \r\n            setKeyState(\"random\"); // key 설정만 새로 해줘도 tag 초기화 된다.\r\n            try{                        \r\n                plot = await serverApi.getBokeh(condition);\r\n                console.log('setplot',plot === null);\r\n                if( plot !== null){\r\n                    showBokeh(plot, id);\r\n                }                \r\n            }catch(err){\r\n                setError(err);     \r\n                console.log(error);\r\n            }finally{\r\n                if (plot !== null){\r\n                    console.log('load complete');\r\n                    setLoading(false);                \r\n                }\r\n            }            \r\n        }\r\n        // plot 설정\r\n        useEffect(()=>{          \r\n            console.log('rerender');\r\n            setPlot();            \r\n        },[condition]);\r\n        return (\r\n            <>\r\n            {loading ? (<Loader />) : (\r\n                <StyledArticle id={id}  \r\n                key={keyState}\r\n                >\r\n                </StyledArticle>\r\n                )\r\n            }\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\nexport default Article;","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\api.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Loader.js",[],"C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\components\\Table1.js",["109"],"import { useEffect } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nconst Table1 = (\r\n    {result}\r\n) => {\r\n    const {column, product} = result;\r\n\r\n    return <div>\r\n        table 1\r\n        {result && (\r\n            <BootstrapTable keyField='key_value' \r\n                            data={product}\r\n                            columns={ column }\r\n                            striped\r\n                            hover\r\n                            pagination={ paginationFactory() } /> \r\n        )}\r\n        \r\n        \r\n    </div>\r\n}\r\n\r\nexport default Table1","C:\\dev\\VIsual_Studio_Code_workspace\\test_final_backend\\src\\router\\Model\\ModelPresenter.js",["110","111","112"],"import styled from 'styled-components';\r\nimport Article from '../../components/Article';\r\nimport Loader from '../../components/Loader';\r\nimport Table1 from '../../components/Table1';\r\nconst StyledSection = styled.section`\r\n    display:grid;\r\n    grid-template-columns: 45em 50em;\r\n    grid-template-rows : 20em;\r\n    grid-row: auto;\r\n    grid-column-gap: 50px;    \r\n`;\r\nconst SubSection = styled.section`\r\n    padding-top: 10px;\r\n    display : flex;  \r\n    flex-direction:column;\r\n`\r\nconst InputLabel = styled.label`\r\n    align-items:flex-end;\r\n    font-size:1.2rem;\r\n`;\r\nconst StyledP = styled.p`\r\n    padding-bottom:5px;\r\n`;\r\nconst StyledForm = styled.form`\r\n    padding-top:15px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:flex-end;\r\n`;\r\nconst ModelPresenter = ({searchPlot, \r\n                        dateRef,\r\n                        period,\r\n                        _handler_on_period,\r\n                        searchDate,                        \r\n                        _handler_on_date,\r\n                        condition1,\r\n                        condition2,\r\n                        state                  \r\n                    }) => {\r\n    const {result, error, loading} = state;\r\n\r\n    return (\r\n        <div>\r\n            <StyledForm onSubmit={searchPlot}>\r\n                <InputLabel htmlFor ='date'>기간 선택 </InputLabel>\r\n                <select id = 'opts' size='1' name='opts' value={period} onChange={_handler_on_period}>\r\n                    <option value='week' seleted=\"selected\">  week</option>\r\n                    <option value='month'>month</option>\r\n                    <option value='year'>year</option>\r\n                </select>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <InputLabel htmlFor ='date'>일자 선택 </InputLabel>\r\n                <input id='date' name='date' type='date' value ={searchDate} onChange={_handler_on_date} ref={dateRef}/>                                \r\n                <input type='submit' value='click'/>\r\n            </StyledForm>\r\n            <StyledSection>\r\n                sdsd\r\n                {/* <SubSection>\r\n                    <StyledP>데이터 발생량 </StyledP>\r\n                    <Article id=\"dataModelScatter\" \r\n                             condition= {condition1}\r\n                             />\r\n                </SubSection> */}\r\n                <SubSection>       \r\n                    {loading ? (<Loader />) : <Table1 \r\n                        result = {result}\r\n                    />}\r\n                    \r\n                </SubSection>\r\n            </StyledSection>\r\n        </div>            \r\n    );\r\n}\r\n\r\nexport default ModelPresenter;",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":5,"column":3,"nodeType":"119","messageId":"120","endLine":8,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":52,"column":9,"nodeType":"123","messageId":"124","endLine":68,"endColumn":10},{"ruleId":"121","severity":1,"message":"122","line":50,"column":9,"nodeType":"123","messageId":"124","endLine":66,"endColumn":10},{"ruleId":"121","severity":1,"message":"122","line":52,"column":9,"nodeType":"123","messageId":"124","endLine":68,"endColumn":10},{"ruleId":"121","severity":1,"message":"122","line":90,"column":9,"nodeType":"123","messageId":"124","endLine":111,"endColumn":10},{"ruleId":"125","severity":1,"message":"126","line":150,"column":104,"nodeType":"127","messageId":"120","endLine":150,"endColumn":109},{"ruleId":"128","severity":1,"message":"129","line":167,"column":8,"nodeType":"130","endLine":167,"endColumn":10,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":15},{"ruleId":"132","severity":1,"message":"136","line":21,"column":7,"nodeType":"134","messageId":"135","endLine":21,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":40,"column":20,"nodeType":"134","messageId":"135","endLine":40,"endColumn":25},{"ruleId":"132","severity":1,"message":"138","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":14},{"ruleId":"128","severity":1,"message":"139","line":63,"column":11,"nodeType":"130","endLine":63,"endColumn":22,"suggestions":"140"},{"ruleId":"132","severity":1,"message":"141","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":15},{"ruleId":"132","severity":1,"message":"136","line":21,"column":7,"nodeType":"134","messageId":"135","endLine":21,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":40,"column":20,"nodeType":"134","messageId":"135","endLine":40,"endColumn":25},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-keys","Duplicate key 'style'.","ObjectExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchTable'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-unused-vars","'Article' is defined but never used.","Identifier","unusedVar","'StyledP' is assigned a value but never used.","'error' is assigned a value but never used.","'styled' is defined but never used.","React Hook useEffect has a missing dependency: 'setPlot'. Either include it or remove the dependency array.",["145"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [searchTable]",{"range":"150","text":"151"},"Update the dependencies array to be: [condition, setPlot]",{"range":"152","text":"153"},[5773,5775],"[searchTable]",[2010,2021],"[condition, setPlot]"]